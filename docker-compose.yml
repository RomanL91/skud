version: "3.7"


services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    entrypoint:
      - ./entrypoint.sh
    expose:
      - 8000
    depends_on:
      - postgres
    networks:
      - djangonetwork
    links:
     - cache

  asgiserver:
    build:
      context: .
      dockerfile: Dockerfile_
    command: daphne -b 0.0.0.0 -p 9000 core.asgi:application
    expose:
      - 9000
    depends_on:
      - postgres
    networks:
      - djangonetwork
    links:
     - cache

  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    env_file:
      - .env
    command: -p ${POSTGRES_PORT}
    networks:
      - djangonetwork

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    networks:
      - djangonetwork

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - cache:/data
    depends_on:
      - postgres
    networks:
      - djangonetwork
   
volumes:
  media_volume:
  static_volume:
  postgres_data:
  cache:
    driver: local
networks:
    djangonetwork:
        driver: bridge